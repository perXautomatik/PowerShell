<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="6" errors="0" failures="0" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2015-05-12" time="16:46:21">
  <environment user="iainb_000" machine-name="OFFICEPC" cwd="D:\Users\iainb_000\SkyDrive\PowerShell\Modules\PhatGit" user-domain="OFFICEPC" platform="Microsoft Windows 8.1 Pro|C:\Windows|\Device\Harddisk0\Partition4" nunit-version="2.5.8.0" os-version="6.3.9600" clr-version="4.0.30319.34014" />
  <culture-info current-culture="en-GB" current-uiculture="en-US" />
  <test-suite type="Powershell" name="D:\Users\iainb_000\SkyDrive\PowerShell\Modules\PhatGit" executed="True" result="Success" success="True" time="0.2054" asserts="0">
    <results>
      <test-suite type="TestFixture" name="GetPhatGitCommand" executed="True" result="Success" success="True" time="0.2054" asserts="0" description="GetPhatGitCommand">
        <results>
          <test-case description="should return $true when git command without a single parameter is found." name="GetPhatGitCommand.should return $true when git command without a single parameter is found." executed="True" time="0.0317" asserts="0" success="True" result="Success" />
          <test-case description="should return $false when git command without a single parameter is not found." name="GetPhatGitCommand.should return $false when git command without a single parameter is not found." executed="True" time="0.0117" asserts="0" success="True" result="Success" />
          <test-case description="should return $true when git command with a single parameter is found." name="GetPhatGitCommand.should return $true when git command with a single parameter is found." executed="True" time="0.0212" asserts="0" success="True" result="Success" />
          <test-case description="should return $false when git command with a single parameter is not found." name="GetPhatGitCommand.should return $false when git command with a single parameter is not found." executed="True" time="0.0106" asserts="0" success="True" result="Success" />
          <test-case description="should return $true when git command with a single parameter is found within multiple parameters." name="GetPhatGitCommand.should return $true when git command with a single parameter is found within multiple parameters." executed="True" time="0.0124" asserts="0" success="True" result="Success" />
          <test-case description="should return $false when git command with a single parameter is not found within multiple parameters." name="GetPhatGitCommand.should return $false when git command with a single parameter is not found within multiple parameters." executed="True" time="0.1178" asserts="0" success="True" result="Success" />
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>